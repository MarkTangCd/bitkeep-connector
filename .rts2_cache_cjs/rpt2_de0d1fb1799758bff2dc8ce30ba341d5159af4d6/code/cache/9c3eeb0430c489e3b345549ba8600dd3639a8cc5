{"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\r\nimport warning from 'tiny-warning';\r\nfunction parseSendReturn(sendReturn) {\r\n    return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn;\r\n}\r\nexport class NoEthereumProviderError extends Error {\r\n    constructor() {\r\n        super();\r\n        this.name = this.constructor.name;\r\n        this.message = 'No Ethereum provider was found on window.bitkeep.';\r\n    }\r\n}\r\nexport class UserRejectedRequestError extends Error {\r\n    constructor() {\r\n        super();\r\n        this.name = this.constructor.name;\r\n        this.message = 'The user rejected the request.';\r\n    }\r\n}\r\nexport class BitKeepConnector extends AbstractConnector {\r\n    constructor(kwargs) {\r\n        super(kwargs);\r\n        this.handleNetworkChanged = this.handleNetworkChanged.bind(this);\r\n        this.handleChainChanged = this.handleChainChanged.bind(this);\r\n        this.handleAccountsChanged = this.handleAccountsChanged.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n    handleChainChanged(chainId) {\r\n        if (__DEV__) {\r\n            console.log(\"Handling 'chainChanged' event with payload\", chainId);\r\n        }\r\n        this.emitUpdate({ chainId, provider: window.bitkeep?.ethereum });\r\n    }\r\n    handleAccountsChanged(accounts) {\r\n        if (__DEV__) {\r\n            console.log(\"Handling 'accountsChanged' event with payload\", accounts);\r\n        }\r\n        if (accounts.length === 0) {\r\n            this.emitDeactivate();\r\n        }\r\n        else {\r\n            this.emitUpdate({ account: accounts[0] });\r\n        }\r\n    }\r\n    handleClose(code, reason) {\r\n        if (__DEV__) {\r\n            console.log(\"Handling 'close' event with payload\", code, reason);\r\n        }\r\n        this.emitDeactivate();\r\n    }\r\n    handleNetworkChanged(networkId) {\r\n        if (__DEV__) {\r\n            console.log(\"Handling 'networkChanged' event with payload\", networkId);\r\n        }\r\n        this.emitUpdate({ chainId: networkId, provider: window.bitkeep?.ethereum });\r\n    }\r\n    async activate() {\r\n        if (!window.bitkeep) {\r\n            throw new NoEthereumProviderError();\r\n        }\r\n        if (window.bitkeep.ethereum.on) {\r\n            window.bitkeep.ethereum.on('chainChanged', this.handleChainChanged);\r\n            window.bitkeep.ethereum.on('accountsChanged', this.handleAccountsChanged);\r\n            window.bitkeep.ethereum.on('close', this.handleClose);\r\n            window.bitkeep.ethereum.on('networkChanged', this.handleNetworkChanged);\r\n        }\r\n        // try to activate + get account via eth_requestAccounts\r\n        let account;\r\n        try {\r\n            account = await window.bitkeep.ethereum.send('eth_requestAccounts').then(sendReturn => parseSendReturn(sendReturn)[0]);\r\n        }\r\n        catch (error) {\r\n            if (error.code === 4001) {\r\n                throw new UserRejectedRequestError();\r\n            }\r\n            warning(false, 'eth_requestAccounts was unsuccessful, falling back to enable');\r\n        }\r\n        // if unsuccessful, try enable\r\n        if (!account) {\r\n            // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\r\n            account = await window.bitkeep.ethereum.enable().then(sendReturn => sendReturn && parseSendReturn(sendReturn)[0]);\r\n        }\r\n        return { provider: window.bitkeep.ethereum, ...(account ? { account } : {}) };\r\n    }\r\n    async getProvider() {\r\n        return window.bitkeep?.ethereum;\r\n    }\r\n    async getChainId() {\r\n        if (!window.bitkeep) {\r\n            throw new NoEthereumProviderError();\r\n        }\r\n        let chainId;\r\n        try {\r\n            chainId = await window.bitkeep.ethereum.send('eth_chainId').then(parseSendReturn);\r\n        }\r\n        catch {\r\n            warning(false, 'eth_chainId was unsuccessful, falling back to net_version');\r\n        }\r\n        if (!chainId) {\r\n            try {\r\n                chainId = await window.bitkeep.ethereum.send('net_version').then(parseSendReturn);\r\n            }\r\n            catch {\r\n                warning(false, 'net_version was unsuccessful, falling back to net version v2');\r\n            }\r\n        }\r\n        if (!chainId) {\r\n            try {\r\n                chainId = parseSendReturn(window.bitkeep.ethereum.send({ method: 'net_version' }));\r\n            }\r\n            catch {\r\n                warning(false, 'net_version v2 was unsuccessful, falling back to manual matches and static properties');\r\n            }\r\n        }\r\n        if (!chainId) {\r\n            if (window.bitkeep.ethereum.isDapper) {\r\n                chainId = parseSendReturn(window.bitkeep.ethereum.cachedResults.net_version);\r\n            }\r\n            else {\r\n                chainId =\r\n                    window.bitkeep.ethereum.chainId ||\r\n                        window.bitkeep.ethereum.netVersion ||\r\n                        window.bitkeep.ethereum.networkVersion ||\r\n                        window.bitkeep.ethereum._chainId;\r\n            }\r\n        }\r\n        return chainId;\r\n    }\r\n    async getAccount() {\r\n        if (!window.bitkeep) {\r\n            throw new NoEthereumProviderError();\r\n        }\r\n        let account;\r\n        try {\r\n            account = await window.bitkeep.ethereum.send('eth_accounts').then(sendReturn => parseSendReturn(sendReturn)[0]);\r\n        }\r\n        catch {\r\n            warning(false, 'eth_accounts was unsuccessful, falling back to enable');\r\n        }\r\n        if (!account) {\r\n            try {\r\n                account = await window.bitkeep.ethereum.enable().then(sendReturn => parseSendReturn(sendReturn)[0]);\r\n            }\r\n            catch {\r\n                warning(false, 'enable was unsuccessful, falling back to eth_accounts v2');\r\n            }\r\n        }\r\n        if (!account) {\r\n            account = parseSendReturn(window.bitkeep.ethereum.send({ method: 'eth_accounts' }))[0];\r\n        }\r\n        return account;\r\n    }\r\n    deactivate() {\r\n        if (window.bitkeep && window.bitkeep.ethereum.removeListener) {\r\n            window.bitkeep.ethereum.removeListener('chainChanged', this.handleChainChanged);\r\n            window.bitkeep.ethereum.removeListener('accountsChanged', this.handleAccountsChanged);\r\n            window.bitkeep.ethereum.removeListener('close', this.handleClose);\r\n            window.bitkeep.ethereum.removeListener('networkChanged', this.handleNetworkChanged);\r\n        }\r\n    }\r\n    async isAuthorized() {\r\n        if (!window.bitkeep) {\r\n            return false;\r\n        }\r\n        try {\r\n            return await window.bitkeep.ethereum.send('eth_accounts').then(sendReturn => {\r\n                if (parseSendReturn(sendReturn).length > 0) {\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n            });\r\n        }\r\n        catch {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=index.js.map","references":["/Users/marktang/MarkTangProject/open-source/bitkeep-connector/node_modules/@web3-react/types/dist/index.d.ts","/Users/marktang/MarkTangProject/open-source/bitkeep-connector/node_modules/@web3-react/abstract-connector/dist/index.d.ts","/Users/marktang/MarkTangProject/open-source/bitkeep-connector/node_modules/tiny-warning/src/index.d.ts","/Users/marktang/MarkTangProject/open-source/bitkeep-connector/src/types.ts"],"map":"{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/index.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/marktang/MarkTangProject/open-source/bitkeep-connector/src/index.d.ts","writeByteOrderMark":false,"text":"import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types';\r\nimport { AbstractConnector } from '@web3-react/abstract-connector';\r\nexport declare class NoEthereumProviderError extends Error {\r\n    constructor();\r\n}\r\nexport declare class UserRejectedRequestError extends Error {\r\n    constructor();\r\n}\r\nexport declare class BitKeepConnector extends AbstractConnector {\r\n    constructor(kwargs: AbstractConnectorArguments);\r\n    private handleChainChanged;\r\n    private handleAccountsChanged;\r\n    private handleClose;\r\n    private handleNetworkChanged;\r\n    activate(): Promise<ConnectorUpdate>;\r\n    getProvider(): Promise<any>;\r\n    getChainId(): Promise<number | string>;\r\n    getAccount(): Promise<null | string>;\r\n    deactivate(): void;\r\n    isAuthorized(): Promise<boolean>;\r\n}\r\n"}}
